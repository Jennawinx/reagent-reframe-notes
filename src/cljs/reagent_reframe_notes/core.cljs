(ns reagent-reframe-notes.core
  (:require
   [reagent.core :as reagent]
   [reagent.dom :as rdom]
   [reagent.session :as session]
   [reitit.frontend :as reitit]
   [clerk.core :as clerk]
   [accountant.core :as accountant]
   [reagent-reframe-notes.router.routes :as routes]
   [reagent-reframe-notes.router.views :as views]))

(defn nav []
  [:header
   [:p 
    [:a {:href (routes/path-for :routes/index)} "Home"] 
    " | "
    [:a {:href (routes/path-for :routes/rendering)} "Rendering"]]])

(defn footer []
  [:footer
   [:p "reagent-reframe-notes was generated by the "
    [:a {:href "https://github.com/reagent-project/reagent-template"} "Reagent Template"] "."]])

(defn app []
  (let [page (:current-page (session/get :route))]
    [:div
     [nav]
     [page]
     [footer]]))

(defn mount-root []
  (rdom/render [app] (.getElementById js/document "app")))

(defn init! []
  (clerk/initialize!)
  (accountant/configure-navigation!
   {:nav-handler
    (fn [path]
      (let [match        (reitit/match-by-path routes/router path)]        
        (reagent/after-render clerk/after-render!)
        (session/put! :route {:current-page (views/view-for (:name (:data match)))
                              :route-params (:path-params match)})
        (clerk/navigate-page! path)))
    :path-exists?
    (fn [path]
      (boolean (reitit/match-by-path routes/router path)))})
  (accountant/dispatch-current!)
  (mount-root))
